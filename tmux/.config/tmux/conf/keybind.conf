################################################################ KEY BINDINGS__
# Note: that the -n means we can ignore the ctrl-a prefix

# Special keybinds to cut and paste panes across sessions and windows
bind-key x set-option -gF @tmux-cut-pane "#{pane_id}" \; display-message "Cut pane [#{@tmux-cut-pane}] #{pane_title}"
bind-key p run-shell -C "move-pane -s #{@tmux-cut-pane}" \; display-message "Paste pane [#{@tmux-cut-pane}] #{pane_title}"

bind-key X set-option -gF @tmux-cut-window "#{window_id}" \; display-message "Cut window [#{@tmux-cut-window}] #{window_name}"
bind-key P run-shell -C "move-window -s =#{@tmux-cut-window}" \; display-message "Paste window [#{@tmux-cut-window}] #{window_name}"

set-window-option -g mode-keys vi
set-window-option -g set-titles off

# Set Ctrl+a as prefix
unbind C-b
set -g prefix C-a
bind-key C-a send-prefix

unbind %   # Split vertically
unbind '"' # Split horizontally

# bind v split-window -h -c "#{pane_current_path}"
# bind h split-window -v -c "#{pane_current_path}"
bind \\ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Vim keys
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

bind-key -r -T prefix 'C-h' resize-pane -L
bind-key -r -T prefix 'C-j' resize-pane -D
bind-key -r -T prefix 'C-k' resize-pane -U
bind-key -r -T prefix 'C-l' resize-pane -R

# Zoom pane
bind-key -T prefix 'C-z' resize-pane -Z

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.config/tmux/tmux.conf

unbind n  #DEFAULT KEY: Move to next window
unbind w  #DEFAULT KEY: change current window interactively

bind n command-prompt "rename-window '%%'"
bind w new-window -c "#{pane_current_path}"

# Switch windows with Alt-j and Alt-k
bind -n M-j previous-window
bind -n M-k next-window

# Use vim keys in copy mode
set-window-option -g mode-keys vi

######################################################################### VIM__

# Tmux doesn't pass <S-CR> codes to Neovim
# https://stackoverflow.com/questions/16359878/how-to-map-shift-enter
bind -n S-Enter send-keys Escape "[13;2u"

# '@pane-is-vim' is a pane-local option that is set by the plugin on load,
# and unset when Neovim exits or suspends; note that this means you'll probably
# not want to lazy-load smart-splits.nvim, as the variable won't be set until
# the plugin is loaded

# Smart pane switching with awareness of Neovim splits.
bind-key -n C-h if -F "#{@pane-is-vim}" 'send-keys C-h'  'select-pane -L'
bind-key -n C-j if -F "#{@pane-is-vim}" 'send-keys C-j'  'select-pane -D'
bind-key -n C-k if -F "#{@pane-is-vim}" 'send-keys C-k'  'select-pane -U'
bind-key -n C-l if -F "#{@pane-is-vim}" 'send-keys C-l'  'select-pane -R'

# Smart pane resizing with awareness of Neovim splits.
bind-key -n M-H if -F "#{@pane-is-vim}" 'send-keys M-h' 'resize-pane -L 3'
bind-key -n M-J if -F "#{@pane-is-vim}" 'send-keys M-j' 'resize-pane -D 3'
bind-key -n M-K if -F "#{@pane-is-vim}" 'send-keys M-k' 'resize-pane -U 3'
bind-key -n M-L if -F "#{@pane-is-vim}" 'send-keys M-l' 'resize-pane -R 3'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

